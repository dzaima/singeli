add{T}(a:T, b:T) => a+b;
'add_i8' = add{i8};
'add_i16' = add{i16};
'add_i32' = add{i32};
'add_i64' = add{i64};
'add_vi8' = add{[16]i8};
'add_vi16' = add{[8]i16};
'add_vi32' = add{[4]i32};
'add_vi64' = add{[2]i64};
sub{T}(a:T, b:T) => a-b;
'sub_i16' = sub{i16};
'sub_i32' = sub{i32};
'sub_i64' = sub{i64};
'sub_vi8' = sub{[16]i8};
'sub_vi16' = sub{[8]i16};
'sub_vi32' = sub{[4]i32};
'sub_vi64' = sub{[2]i64};
mul{T}(a:T, b:T) => a*b;
'mul_i8' = mul{i8};
'mul_i16' = mul{i16};
'mul_i32' = mul{i32};
'mul_i64' = mul{i64};
'mul_vi8' = mul{[16]i8};
'mul_vi16' = mul{[8]i16};
'mul_vi32' = mul{[4]i32};
'mul_vi64' = mul{[2]i64};
div{T}(a:T, b:T) => a/b;
'div_i8' = div{i8};
'div_i16' = div{i16};
'div_i32' = div{i32};
'div_i64' = div{i64};
'div_vi8' = div{[16]i8};
'div_vi16' = div{[8]i16};
'div_vi32' = div{[4]i32};
'div_vi64' = div{[2]i64};
