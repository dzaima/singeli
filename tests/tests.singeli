f{n}(a:[n]i32) : [2*n]i32 {
  x:i64 = 5;
}
// 'f' = f{2*3 + 4*5};

g{T}(a:[4]T) { }
'g' = g{[2]i32};

f{A,B}(a:A, b:B) : A {
  a+b
}
g{T,n}(a:T) {
  x:T = n+a;
  x
}
h1{T,n}(a:[n]T, b:[n]T) : [n]T {
  a + b
}
h2{T}(a:T, b:T) : [n]T {
  a + b
}
h3{A,B}(a:A, b:B) : [n]A {
  a + b
}

'f1' = f{i32,i32};
'f2' = f{i32,i64};
'f3' = f{i32};
'g1' = g{i32, 5};
'g2' = g{i32, 1*2 + 3*4};
'h1' = h1{i32,4};
'h2' = h2{[4]i32};
'h3' = h3{[4]i32, [8]i32};


recursion() { recursion(); }
'recursion' = recursion;

noReturn() { }
'noReturn' = noReturn;

badSize{T}(a:[T]i32) => a
'badSize' = badSize{i32};

notConstant(a:i32) {
  x:[a]i32 = 5;
}
'notConstant'=notConstant;

addi32(a:i32, b:i32) => a+b;

wrongArgTypes(i64 a) {
  addi32(5, a);
}
'wrongArgTypes'=wrongArgTypes;

wrongArgCount1() { addi32(5); }
'wrongArgCount1'=wrongArgCount1

wrongArgCount2() { addi32(5,6,7); }
'wrongArgCount2'=wrongArgCount2