__add{T & T=   i32}(a:T, b:T) => emit T "add" a b;
__add{T & T=[4]i32}(a:T, b:T) => emit T "mm_add_epi32" a b;
__add{T & T=[8]i32}(a:T, b:T) => emit T "mm256_add_epi32" a b;

__sub{T & T=   i32}(a:T, b:T) => emit T "sub" a b;

__mul{T & T=   i32}(a:T, b:T) => emit T "imul" a b;

__div{T & T=   i32}(a:T, b:T) => emit T "idiv" a b;